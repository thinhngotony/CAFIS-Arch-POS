<ResourceDictionary x:Class="WPSaturnEMoney.Views.CustomResources"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Header, Footer-->
    <ControlTemplate x:Key="Header">
        <Grid>
            <DockPanel Background="{Binding HeaderFooterColor}" Height="50" VerticalAlignment="Top">
                <Border BorderThickness="0,0,0,1" BorderBrush="#AFAFAF"/>
                <Label Content="{Binding ListHeaderTitle[0]}" Foreground="{Binding HeaderTitleColor}" FontFamily="MS Gothic" FontSize="24"
                        VerticalAlignment="Center" HorizontalAlignment="Left" Margin="82,0,0,0"/>
                <Label Content="{Binding ListHeaderTitle[1]}" Foreground="{Binding HeaderTitleColor}" FontFamily="MS Gothic" FontSize="24"
                        VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,82,0"/>
            </DockPanel>
            <Rectangle Style="{DynamicResource SignalBar}" VerticalAlignment="Top" Margin="0,50,0,0" />
        </Grid> 
    </ControlTemplate>
    <ControlTemplate x:Key="Footer">
        <Grid>
            <Grid Background="{Binding HeaderFooterColor}" Height="50" VerticalAlignment="Bottom">
                <Border BorderThickness="0,1,0,0" BorderBrush="#AFAFAF"/>
            </Grid>
            <Rectangle Style="{DynamicResource SignalBar}" VerticalAlignment="Bottom" Margin="0,0,0,50" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="SignalBar" TargetType="Rectangle">
        <Setter Property="Fill" Value="{Binding SignalBarColor}"/>
        <Setter Property="Width" Value="860"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <!--Brand button style-->
    <Style x:Key="BrandButtonStyle" TargetType="{x:Type Button}">
        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="Button_PreviewMouseLeftButtonDown" />
        <EventSetter Event="PreviewMouseLeftButtonUp" Handler="Button_PreviewMouseLeftButtonUp" />
        <Setter Property="Background" Value="{Binding BrandButtonColor}"/>
        <Setter Property="Foreground" Value="{Binding BrandButtonLabelColor}"/>
        <Setter Property="FontFamily" Value="MS Gothic"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{Binding ButtonBorderColor}" BorderThickness="6" CornerRadius="15" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding BrandButtonColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Normal button style-->
    <Style x:Key="NormalButtonStyle" TargetType="{x:Type Button}">
        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="Button_PreviewMouseLeftButtonDown" />
        <EventSetter Event="PreviewMouseLeftButtonUp" Handler="Button_PreviewMouseLeftButtonUp" />
        <Setter Property="Background" Value="{Binding NormalButtonColor}"/>
        <Setter Property="Foreground" Value="{Binding NormalButtonLabelColor}"/>
        <Setter Property="FontFamily" Value="MS Gothic"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{Binding ButtonBorderColor}" BorderThickness="6" CornerRadius="15" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding NormalButtonColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Back button style-->
    <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">
        <EventSetter Event="PreviewMouseLeftButtonDown" Handler="Button_PreviewMouseLeftButtonDown" />
        <EventSetter Event="PreviewMouseLeftButtonUp" Handler="Button_PreviewMouseLeftButtonUp" />
        <Setter Property="Background" Value="{Binding BackButtonColor}"/>
        <Setter Property="Foreground" Value="{Binding BackButtonLabelColor}"/>
        <Setter Property="FontFamily" Value="MS Gothic"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{Binding ButtonBorderColor}" BorderThickness="6" CornerRadius="15" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding BackButtonColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--NumPad button style-->
    <Style x:Key="NumPadButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{Binding NumPadButtonColor}"/>
        <Setter Property="Foreground" Value="{Binding NumPadButtonLabelColor}"/>
        <Setter Property="FontFamily" Value="MS Gothic"/>
        <Setter Property="FontSize" Value="48"/>
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="90"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{Binding ButtonBorderColor}" BorderThickness="6" CornerRadius="45">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding NumPadButtonColor}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{Binding ButtonPressedColor}"/>
                <Setter Property="Foreground" Value="{Binding ButtonPressedLabelColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>